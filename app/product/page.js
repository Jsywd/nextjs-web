'use client'

import React, { useState } from 'react'
import {
  TextField,
  Button,
  Typography,
  Box,
  Stack,
  MenuItem,
} from '@mui/material'
import { useRouter } from 'next/navigation'

const categories = ['‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡∏™‡∏∏‡∏ô‡∏±‡∏Ç', '‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏°‡∏ß', '‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏™‡∏±‡∏ï‡∏ß‡πå‡πÄ‡∏•‡∏µ‡πâ‡∏¢‡∏á']

export default function CreateProductPage() {
  const router = useRouter()

  const [formData, setFormData] = useState({
    name: '',
    description: '',
    image_url: '',
    price: '',
    category: '',
    shop_link: '', 
  })

  const [error, setError] = useState(null)

  const handleChange = (e) => {
    const { name, value } = e.target
    setFormData((prev) => ({...prev,[name]: value}))
  }

  const handleSubmit = async (e) => {
    e.preventDefault()
    setError(null)

    try {
      const res = await fetch(`${process.env.NEXT_PUBLIC_API_URL}/api/product`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData),
      })

      if (!res.ok) throw new Error('‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÑ‡∏î‡πâ')

      const data = await res.json() // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å response
      alert('‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à') // ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à
      router.push('/admin') // ‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏´‡∏ô‡πâ‡∏≤ product ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÄ‡∏™‡∏£‡πá‡∏à

    } catch (err) {
      setError(err.message) // ‡∏ñ‡πâ‡∏≤‡∏°‡∏µ error ‡πÉ‡∏´‡πâ‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏° error
    }
  }

  return (
    <Box maxWidth={600} mx="auto" mt={5} px={2}>
      <Typography variant="h4" mb={3} color="primary">üõí ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÉ‡∏´‡∏°‡πà</Typography>
      <form onSubmit={handleSubmit}>
        <Stack spacing={2}>
          <TextField
            label="‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            name="name"
            value={formData.name}
            onChange={handleChange}
            required
          />
          <TextField
            label="‡∏£‡∏≤‡∏¢‡∏•‡∏∞‡πÄ‡∏≠‡∏µ‡∏¢‡∏î"
            name="description"
            multiline
            rows={3}
            value={formData.description}
            onChange={handleChange}
            required
          />
          <TextField
            label="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û"
            name="image_url"
            value={formData.image_url}
            onChange={handleChange}
            required
          />
          <TextField
            label="‡∏£‡∏≤‡∏Ñ‡∏≤"
            name="price"
            type="number"
            inputProps={{ step: '1' }}
            value={formData.price}
            onChange={handleChange}
            required
          />
          <TextField
            select
            label="‡∏´‡∏°‡∏ß‡∏î‡∏´‡∏°‡∏π‡πà"
            name="category"
            value={formData.category}
            onChange={handleChange}
            required
          >
            {categories.map((cat) => (
              <MenuItem key={cat} value={cat}>{cat}</MenuItem>
            ))}
          </TextField>

          <TextField
            label="‡∏•‡∏¥‡∏á‡∏Å‡πå‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤"
            name="shop_link" 
            value={formData.shop_link}
            onChange={handleChange}
            required
          />
          
          {error && <Typography color="error">{error}</Typography>}

          <Button variant="contained" color="success" type="submit">
            ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
          </Button>
          <Button variant="outlined" color="secondary" onClick={() => router.push('/admin')}>
            ‡∏Å‡∏•‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏´‡∏•‡∏±‡∏Å
          </Button>
        </Stack>
      </form>
    </Box>
  )
}
